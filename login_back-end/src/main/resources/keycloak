Keycloak é um software de código aberto que permite configurar um único método de autenticação por meio do gerenciamento por identidade e por acesso.

O que ele me oferece?

São oferecidas pelo Keycloak funcionalidades como:

Criação de usuário (podendo ser criados pelo administrador do sistema, e habilitado ou não para o próprio usuário se cadastrar);
Login, “esqueci minha senha”, login com plataformas externas como redes sociais;
Integração dos usuários com Active Directory;
Ativação de usuários por confirmação de e-mail;
Obrigar aceitação de termos de uso antes de logar;
Customização das páginas que o usuário acessa (como a própria tela de login);
Serviços para que outras aplicações busquem dados de usuários;
Criação de permissões que seu sistema vai usar;
Criação de grupos de usuário;
i18n (internationalization);
Entre outras várias configurações e customizações mais avançadas.

---

A Keycloak é um produto open source da Red Hat, cuja versão enterprise é o Red Hat Single Sign-On, que permite o login único com o Gerenciamento de Identidades
e Gerenciamento de Acesso, destinado a aplicativos e serviços modernos.

Em vez de fazer login em aplicativos individuais, os usuários se autenticam no Keycloak. Isso significa que os aplicativos individuais
não precisam implementar seus próprios formulários de login, autenticação e armazenamento de usuários e sessões. Depois de fazer login
no Keycloak, os usuários não precisam fazer login novamente para acessar um aplicativo diferente. Da mesma forma, uma vez desconectado
do Keycloak, os usuários não precisam sair dos aplicativos individuais. Habilitar o login com redes sociais também é fácil. 
A configuração para esses itens pode ser adicionada no console administrativo do Keycloak. Nenhum código ou alteração é necessário para as aplicações.

Single-Sign on: Possibilita que o usuário faça login apenas uma vez para acessar todos os sistemas que estejam configurados no keycloak.

Admin Console: O keycloak possui um excelente console administrativo, que facilita muito o cadastro de novos clientes, usuários, roles etc.

Standard Protocols: Keycloak e baseado em protocolos padrão e fornece suporte para OpenID Conect, Oauth 2.0 e SAML.

Client Adapters: Para Jaja, Wildfly, Jboss EAP, JavaScript, Suse, Tomcat, Jetty entre outros, tornando a integração mais fácil.

Identy Brokering and Social Login: Facilidade em adicionar botões de login pelas redes sociais, como facebook, twitter, github, google entre outras.

User Federation: Integração com LDAP ou Active Directory ou até mesmo criar seu próprio provider, caso você tenha seus usuários em outro banco de dados relacional.

--- 

O Keycloak é um software open source de gerenciamento de identidade e acesso voltado para WebApps e RESTful web services.

O Keycloak usa padrões de protocolo aberto como OpenID Connect ou SAML 2.0 para proteger suas aplicações. Os WebApps redirecionam o usuário para o servidor de autenticação Keycloak, onde ele insere suas credenciais. Isso é importante porque os usuários estão completamente isolados dos aplicativos e estes nunca veem as credenciais do usuário. Em vez disso, os aplicativos recebem um token de identidade. Esses tokens podem conter informações de identidade como nome de usuário, endereço, e-mail e outros dados de perfil. Eles também podem conter dados de permissão para que sua aplicação possa tomar decisões de autorização. Esses tokens também podem ser usados ​​para fazer chamadas seguras em serviços baseados em REST.

O Keycloak possui uma série de funcionalidades que são de interesse de desenvolvedores que querem colocar uma camada de autenticação unificada em suas aplicações, são elas:
Single-Sign On e Single-Sign Out
Suporte à OpenID Connect
Suporte à OAuth 2.0
Suporte à SAML
Identity Brokering – Autentique com OpenID Connect externo ou provedores de identidade SAML
Login social – Habilite o login com Google, GitHub, Facebook, Twitter e outras redes sociais
Federação do usuário – Sincronize usuários de servidores LDAP e Active Directory
Kerberos bridge – Autentique automaticamente os usuários que estão logados em um servidor Kerberos
Console Admin para gerenciamento central de usuários, funções, mapeamentos de funções, clientes e configuração
Console de gerenciamento de contas que permite aos usuários gerenciar centralmente suas contas
Suporte a temas – personalize todas as páginas voltadas para o usuário para integrá-las aos seus aplicativos e marcas
Autenticação de dois fatores – suporte para TOTP / HOTP via Google Authenticator ou FreeOTP
Fluxos de login – auto-registro opcional do usuário, recuperar senha, verificar e-mail, exigir atualização de senha etc.
Gerenciamento de sessão – os próprios administradores e usuários podem visualizar e gerenciar as sessões do usuário
Mapeadores de tokens – Mapeie atributos de usuário, funções e demais recursos como desejar em tokens e instruções
Suporte a CORS – os adaptadores de cliente possuem suporte integrado para CORS
Service Provider Interfaces (SPI) – uma série de SPIs para permitir a personalização de vários aspectos do servidor. Fluxos de autenticação, provedores de federação de usuário, mapeadores de protocolo e muito mais
Adaptadores de cliente para aplicativos JavaScript, WildFly, JBoss EAP, Fuse, Tomcat, Jetty, Spring etc.
Suporta qualquer plataforma/linguagem que tenha uma biblioteca OpenID Connect Relying Party ou biblioteca de provedor de serviços SAML 2.0

---

---

Keycloak é um produto software de código aberto que permite logon único (IdP) com gerenciamento de identidade e gerenciamento de acesso para aplicações e serviços modernos.

A intenção da ferramenta é facilitar a proteção de aplicativos e serviços com pouca ou nenhuma criptografia.
Um IdP permite que um aplicativo (geralmente chamado de Provedor de Serviços ou SP) delegue sua autenticação.

Isso tem, entre outras coisas, várias vantagens:

Ele permite que os desenvolvedores se concentrem na funcionalidade de negócios, não tendo que se preocupar com os aspectos de segurança da autenticação,
seja integrando diretamente uma biblioteca que suporta um dos dois protocolos ou usando um módulo no servidor web ou um adaptador Keycloak (não exaustivo lista de possibilidades)
Ser capaz de centralizar a autenticação e, portanto, habilitar a autenticação de logon único (SSO)
Ser capaz de unificar os métodos de autenticação e fazê-los evoluir sem modificar as aplicações.
Reinventar a autenticação de aplicativos SaaS e, assim, controlar a proliferação de identidades digitais; A desativação de contas é simplificada (excluir uma conta SaaS quando um funcionário sai) não é mais esquecido.
Ainda dentro de suas principais características, os seguintes pontos se destacam:

logon único
Suporte para protocolos padrão
Aplicativos seguros de conta e serviço simplificado
Compatível com LDAP como repositório de usuário externo
delegação de autenticação (login social)
alto desempenho: cluster de servidor, escalonável, alta disponibilidade
totalmente compatível com conteinerização
temas simples para implementar
autenticação forte por código de uso único (OTP) nativo via FreeOTP ou Google Authenticator
solucionar automaticamente o problema se você esquecer sua senha
criação automática de contas (por formulário ou as chamadas autenticações sociais)
extensível: base de usuários, métodos de autenticação, protocolos.

---

Keycloak é uma ferramenta de gerenciamento de acesso e identidade IAM (Identity and Access Management) de código aberto aqui está o seu repositório com foco em ferramentas modernas tais como single-page applications (SPA),
aplicativos móveis e APIs REST.

Keycloak fornece páginas de login totalmente personalizáveis, incluindo autenticação forte, também com vários fluxos, como recuperação de senhas, exigindo que os usuários atualizem regularmente suas senhas,
aceitação de termos/ condições e muito mais.

Todas as páginas visíveis para seus usuários suportam temas personalizados, tornando muito fácil modificar a aparência das páginas para integrar-se à sua marca corporativa e aos aplicativos existentes.
Ao delegar autenticação ao Keycloak, seus aplicativos não precisam se preocupar com diferentes mecanismos de autenticação ou como armazenar senhas com segurança. Esta abordagem também fornece um nível
mais alto de segurança, pois os aplicativos não têm acesso direto ao usuário e credenciais, eles recebem, em vez disso, tokens de segurança que lhes dão apenas acesso para o que eles precisam.

O Keycloak fornece login único, bem como recursos de gerenciamento de sessão, permitindo que os usuários acessem vários aplicativos, tendo apenas que se autenticar uma vez. Todos os usuários e administradores
têm total visibilidade de onde os usuários são autenticados e pode encerrar sessões remotamente quando necessário.

Keycloak baseia-se em protocolos padrões da indústria com suporte para OAuth 2.0, OpenID Connect, e SAML 2.0. O uso de protocolos padrões da indústria é importante tanto do ponto de vista de segurança e perspectiva 
em termos de tornar mais fácil a integração com aplicativos já existentes com aplicativos novos ou aplicativos de terceiros.

Realm

Um realm gerencia um conjunto de usuários, credenciais, funções e grupos. Um usuário que pertence a ele,
e ele efetua login nesse realm. Realms são isolados uns dos outros e só podem gerenciar e autenticar os
usuários que pertencem a ele.

Client

Clients são entidades que podem solicitar o Keycloak para autenticar um usuário. Na maioria das vezes,
os clients são aplicativos e serviços que desejam usar o Keycloak para se proteger e fornecer uma solução
de logon único. Os clients também podem ser entidades que desejam apenas solicitar informações de identidade
ou um token de acesso, para que possam invocar com segurança outros serviços na rede protegidos pelo Keycloak.

Realm Role

As aplicações geralmente atribuem acesso e permissões a funções específicas, em vez de usuários individuais,
pois lidar com usuários pode ser muito difícil de gerenciar. Vamos criar app-user e app-admin roles realm, 
atribuindo as roles correspondente ao gateway-microservice (user, admin).

User

Usuários são entidades capazes de efetuar login no seu sistema. Eles podem ter atributos associados
a eles mesmos, como e-mail, nome de usuário, endereço, número de telefone e dia do nascimento.
Eles podem ser associados ao grupo e ter roles específicas atribuídas a eles.

https://dev.delivery/seguranca-de-aplicacoes-com-keycloak/

https://www.keycloak.org/getting-started/getting-started-docker

http://localhost:8080/auth/admin
http://localhost:8080/auth/realms/myrealm/account/
http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/auth?client_id=myclient&redirect_uri=https%3A%2F%2Fwww.keycloak.org%2Fapp%2F%23url%3Dhttp%3A%2F%2Flocalhost%3A8080%26realm%3Dmyrealm%26client%3Dmyclient&state=95cc4553-308c-401d-831d-5b73c06bbe9f&response_mode=fragment&response_type=code&scope=openid&nonce=9cca86f8-56ed-49d7-8c4e-5ba4c90a327d

Elementos de um processo de autorização

Resource Owner

Client

Resource Server

Authorization Server

OAuth 2

- "The OAuth 2.0 authorization framework enables a third-party application to obtain limited
access to an HTTP service"

- É um framework de autorização e não autenticação

Flow

----------                                               ----------------
|        | ----(A) -> ----- Authorization Request------> |   Resource   |     
|        | < - (B) ------ Authorization Grant ---------> |    Owner     |
|        |                                               ----------------
|        | ----(C) -------- Authorization Grant -------> | Authorization|
| Client | < - (D) ---------- Acess Token -------------> |    Server    |
|        |                                               ----------------
|        | ----(E) ------------ Acess Token -----------> |   Resource   |
|        | < - (F) ------- Protected Resource ---------> |    Server    |
----------                                               ----------------

Como aproveitar esse fluxo e trabalhar com Autenticação/Login?

"OpenID Connect 1.0 is a simple identity layer in top of the OAuth 2.0 protocol.
It enables Clients to verify of the End-User based on the authentication 
performed by an Authorization Server..."
                                            
Flow

SPA 	              USER           AUTH SERVER
 |                     |                  |
 |-->-Posso--acessar?--|                  |
 |                     |                  |
 |<-------Sim----------|                  |
 |                     |                  |
 |-Inicie-o-processo-de|-Auth------------>|
 |                     |                  |
 |                     |                  |
 |                     |<---Faça-o-Login--|
 |                     |<------Feito----->|
 |<--------------------|-Envia-Auth-Code--|
 |---------------------|----------------->|
Solicita Acess Code e Id Token em troca do Auth Code
 |<---------------Envia|-Acess-e-Id-Token-|

- OAuth2 Authorization Framework/RFC 6749
- RFC 6749 possui uma definição de uma API chamada: "authorization endpoint"
- Essa API necessita de um parâmetro "response_type"
- O OpenID Connect utiliza esse parâmetro para emitir o token para autenticação
- Quando estamos utilizando apenas OAuth 2, esse parâmetro pode ser "code" ou "token" 
- Ao utilizar OpenID Connect, um novo valor pode ser adicionado "id_token"
- Juntamente ao "id_token", o valor openid pode ser passado como parte do escopo no fluxo do OAuth 2

Tipos de response response_type

- code
- token
- id_token
- id_token token
- code id_token
- code token
- code token id_token
- none

O que é o id_token?

- Possui informações necessárias para garantir a autenticação do usuário, 
como ID, Email e informações adicionais passadas pelo servidor de autenticação
- JWT (JSON Web Tokens)
- Padrão aberto que representa de forma segura solicitações de informação entre duas partes
- Token é um código base64 que armazena um JSON
- JWT possui 3 partes:
    - Header
    - Payload
    - Signature
